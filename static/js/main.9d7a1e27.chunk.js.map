{"version":3,"sources":["home/index.tsx","useContext/index.tsx","useReducer/index.tsx","useMemo/index.tsx","interviewQuestions/index.tsx","interviewQuestions/javascript/index.jsx","route.tsx","index.tsx"],"names":["Home","to","style","textAlign","marginTop","CountContext","createContext","Counter","count","useContext","Example","useState","setCount","onClick","Provider","value","initState","num","numReducer","state","action","type","useReducer","dispatch","Child1","React","memo","props","console","log","Child2","n","setN","m","setM","addN","useCallback","addM","fontSize","fontWeight","color","QuestionItem","title","answer","alignItems","alignSelf","marginLeft","marginRight","whiteSpace","opacity","a","b","Number","c","check","fir","sec","Object","is","undefined","foo","String","NaN","arr","callback","push","modifyArray","baseNumber","addSix","N","id1","Symbol","id2","Root","exact","path","component","UseContext","UseReducer","UseMemo","InterviewQuestions","Javascript","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9d7a1e27.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Link to=\"InterviewQuestions\">\n        <div style={{ textAlign: \"center\", marginTop: 50 }}>面试题</div>\n      </Link>\n      <Link to=\"UseContext\">\n        <div style={{ textAlign: \"center\", marginTop: 28 }}>useContext示例</div>\n      </Link>\n      <Link to=\"UseReducer\">\n        <div style={{ textAlign: \"center\", marginTop: 28 }}>useReducer示例</div>\n      </Link>\n      <Link to=\"UseMemo\">\n        <div style={{ textAlign: \"center\", marginTop: 28 }}>useMemo示例</div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, createContext, useContext } from \"react\";\nconst CountContext = createContext(0);\n\nconst Example = () => {\n  const [count, setCount] = useState<number>(0);\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 50 }}>\n      <p>父组件点击数量：{count}</p>\n      <button onClick={() => setCount(count + 1)}>{\"点击+1\"}</button>\n      <CountContext.Provider value={count}>\n        <Counter />\n      </CountContext.Provider>\n    </div>\n  );\n};\n\nconst Counter = () => {\n  const count = useContext(CountContext);\n  return <p>子组件获得的点击数量：{count}</p>;\n};\n\nexport default Example;\n","import { useReducer } from \"react\";\n\nconst initState = {\n  num: 0,\n};\n\ninterface initStateType {\n  num: number;\n}\n\ninterface actionType {\n  type: string;\n}\n\nconst numReducer = (state: initStateType, action: actionType) => {\n  switch (action.type) {\n    case \"add\":\n      return { ...state, num: state.num + 1 };\n    case \"reduce\":\n      return { ...state, num: state.num - 1 };\n    default:\n      return state;\n  }\n};\n\nconst Example = () => {\n  const [state, dispatch] = useReducer(numReducer, initState);\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 50 }}>\n      <div>数量： {state.num}</div>\n      <button onClick={() => dispatch({ type: \"reduce\" })}>减少</button>\n      <button onClick={() => dispatch({ type: \"add\" })}>增加</button>\n    </div>\n  );\n};\n\nexport default Example;\n","import React, { ReactElement, useCallback, useState } from \"react\";\n\nconst Example = () => {\n  const [n, setN] = useState<number>(0);\n  const [m, setM] = useState<number>(10);\n  console.log(\"执行最外层盒子了\");\n\n  const addN = useCallback(() => {\n    setN(n + 1);\n  }, [n]);\n\n  const addM = useCallback(() => {\n    setM(m + 1);\n  }, [m]);\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 50 }}>\n      最外层盒子\n      <Child1 value={n} onClick={addN} />\n      <Child2 value={m} onClick={addM} />\n      <button onClick={addN}>n+1</button>\n      <button onClick={addM}>m+1</button>\n    </div>\n  );\n};\n\ninterface childProp {\n  value: number;\n  onClick?: () => void;\n}\n\nconst Child1 = React.memo((props: childProp): ReactElement<childProp> => {\n  console.log(\"执行子组件1了\");\n  return <div>子组件1上的n：{props.value}</div>;\n});\n\nconst Child2 = React.memo((props: childProp): ReactElement<childProp> => {\n  console.log(\"执行子组件2了\");\n  return <div>子组件2上的m：{props.value}</div>;\n});\n\nexport default Example;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div>\n      <div\n        style={{\n          textAlign: \"center\",\n          marginTop: 28,\n          fontSize: 20,\n          fontWeight: \"500\",\n          color: \"#333\",\n        }}\n      >\n        面试题\n      </div>\n      <Link to=\"Javascript\">\n        <div style={{ textAlign: \"center\", marginTop: 28 }}>\n          Javascript面试题\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import * as React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <QuestionItem\n        title={\"1.JavaScript 中的强制转型是指什么？\"}\n        answer={\n          \"在 JavaScript 中，两种不同的内置类型间的转换被称为强制转型。强制转型在 JavaScript 中有两种形式：显式和隐式。\"\n        }\n        onClick={() => {\n          console.log(\"\\n显示强制转换：\");\n          let a = \"42\";\n          let b = Number(a);\n          console.log(a, typeof a);\n          console.log(b, typeof b);\n\n          console.log(\"\\n隐式强制转换：\");\n          let c = \"55\";\n          let d = c * 1;\n          console.log(c, typeof c);\n          console.log(d, typeof d);\n        }}\n      />\n      <QuestionItem\n        title={\"2. JavaScript 中的作用域（scope）是指什么？\"}\n        answer={\n          \"在 JavaScript 中，每个函数都有自己的作用域。作用域基本上是变量以及如何通过名称访问这些变量的规则的集合。只有函数中的代码才能访问函数作用域内的变量。\\n       同一个作用域中的变量名必须是唯一的。一个作用域可以嵌套在另一个作用域内。如果一个作用域嵌套在另一个作用域内，最内部作用域内的代码可以访问另一个作用域的变量。\"\n        }\n      />\n      <QuestionItem\n        title={\"3. 解释 JavaScript 中的相等性。\"}\n        answer={\n          \"JavaScript 中有严格比较和类型转换比较：\\n        严格比较（例如 ===）在不允许强制转型的情况下检查两个值是否相等；\\n        抽象比较（例如 ==）在允许强制转型的情况下检查两个值是否相等。\\n\\n        一些简单的规则：\\n        如果被比较的任何一个值可能是 true 或 false，要用 ===，而不是 ==；\\n        如果被比较的任何一个值是这些特定值（0、“”或 []），要用 ===，而不是 ==；\\n        在其他情况下，可以安全地使用 ==。它不仅安全，而且在很多情况下，它可以简化代码，并且提升代码可读性。\"\n        }\n        onClick={() => {\n          let a = \"42\";\n          let b = 42;\n          const check = (fir, sec) => {\n            console.log(\"\\n\");\n            console.log(fir, \"==\", sec, \"结果为：\", fir == sec);\n            console.log(fir, \"===\", sec, \"结果为：\", fir === sec);\n            console.log(fir, \"Object.is\", sec, \"结果为：\", Object.is(fir, sec));\n          };\n\n          check(a, b);\n          check(undefined, undefined);\n          check(null, null);\n          check(true, true);\n          check(false, false);\n          check(\"foo\", \"foo\");\n          let c = { foo: \"bar\" };\n          let d = c;\n          check(c, d);\n          check({ foo: \"bar\" }, { foo: \"bar\" });\n          check(0, 0);\n          check(+0, -0);\n          check(0, false);\n          check(\"\", 0);\n          check(\"0\", 0);\n          check(new String(\"foo\"), \"foo\");\n          check(null, undefined);\n          check(null, false);\n          check(new String(\"foo\"), new String(\"foo\"));\n          check(0, null);\n          check(0, NaN);\n          check(\"foo\", NaN);\n          check(NaN, NaN);\n        }}\n      />\n      <QuestionItem\n        title={\"4. 解释什么是回调函数，并提供一个简单的例子。\"}\n        answer={\n          \"回调函数是可以作为参数传递给另一个函数的函数，并在某些操作完成后执行。\"\n        }\n        onClick={() => {\n          function modifyArray(arr, callback) {\n            // 对 arr 做一些操作\n            arr.push(100);\n            // 执行传进来的 callback 函数\n            callback();\n          }\n          var arr = [1, 2, 3, 4, 5];\n          modifyArray(arr, function () {\n            console.log(\"array has been modified\", arr);\n          });\n        }}\n      />\n      <QuestionItem\n        title={\"5. “use strict”的作用是什么？\"}\n        answer={\n          \"use strict 出现在 JavaScript 代码的顶部或函数的顶部，可以帮助你写出更安全的 JavaScript 代码。如果你错误地创建了全局变量，它会通过抛出错误的方式来警告你。\"\n        }\n      />\n      <QuestionItem\n        title={\"6. 解释 JavaScript 中的 null 和 undefined。\"}\n        answer={\n          \"JavaScript 中有两种底层类型：null 和 undefined。它们代表了不同的含义：\\n        尚未初始化：undefined；\\n        空值：null。\\n        null和undefined是两个不同的对象\"\n        }\n      />\n      <QuestionItem\n        title={\n          \"7. 编写一个可以执行如下操作的函数: \\n     var addSix = createBase(6); \\n     addSix(10); // 返回 16 \\n     addSix(21); // 返回 27 \"\n        }\n        answer={\n          \"可以创建一个闭包来存放传递给函数 createBase 的值。被返回的内部函数是在外部函数中创建的，内部函数就成了一个闭包，它可以访问外部函数中的变量。\"\n        }\n        onClick={() => {\n          const createBase = (baseNumber) => {\n            return function (N) {\n              return baseNumber + N;\n            };\n          };\n          var addSix = createBase(6);\n          console.log(addSix(10)); // 返回 16\n          console.log(addSix(21)); // 返回 27\n        }}\n      />\n      <QuestionItem\n        title={\"8. 解释 JavaScript 中的值和类型。\"}\n        answer={\n          \"JavaScript提供两种数据类型: 基本数据类型和引用数据类型\\n       基本数据类型有: String、Number、Boolean、Null、Undefined、Symbol\\n       引用数据类型有: Object、Array、Function\"\n        }\n        onClick={() => {\n          let id1 = Symbol(\"id\");\n          let id2 = Symbol(\"id\");\n          console.log(id1 === id2);\n        }}\n      />\n      <QuestionItem title={\"9. 解释事件冒泡以及如何阻止它？\"} answer={\"\"} />\n      <QuestionItem\n        title={\"10. JavaScript 中的 let 关键字有什么用？\"}\n        answer={\"\"}\n      />\n      <QuestionItem title={\"11. 如何检查一个数字是否为整数？\"} answer={\"\"} />\n      <QuestionItem\n        title={\"12. 什么是 IIFE（立即调用函数表达式）？\"}\n        answer={\"\"}\n      />\n      <QuestionItem\n        title={\"13. 如何在 JavaScript 中比较两个对象？\"}\n        answer={\"\"}\n      />\n      <QuestionItem\n        title={\"14. 你能解释一下 ES5 和 ES6 之间的区别吗？\"}\n        answer={\"\"}\n      />\n      <QuestionItem\n        title={\"15. 解释 JavaScript 中“undefined”和“not defined”之间的区别。\"}\n        answer={\"\"}\n      />\n      <QuestionItem title={\"16. 匿名和命名函数有什么区别？\"} answer={\"\"} />\n      <QuestionItem\n        title={\"17. Javascript 中的“闭包”是什么？举个例子？\"}\n        answer={\"\"}\n      />\n      <QuestionItem\n        title={\"18. 如何在 JavaScript 中创建私有变量？\"}\n        answer={\"\"}\n      />\n      <QuestionItem title={\"19. 请解释原型设计模式。\"} answer={\"\"} />\n      <QuestionItem\n        title={\"20. “this”关键字的原理是什么？请提供一些代码示例。\"}\n        answer={\"\"}\n      />\n      <QuestionItem\n        title={\"21. 如何向 Array 对象添加自定义方法，让下面的代码可以运行？\"}\n        answer={\"\"}\n      />\n      <QuestionItem\n        title={\"22. 什么是 JavaScript 中的提升操作？\"}\n        answer={\"\"}\n      />\n      <QuestionItem\n        title={\"23. 以下代码输出的结果是什么？\\n   0.1 + 0.2 === 0.3 \"}\n        answer={\"\"}\n      />\n      <QuestionItem\n        title={\"24. 请描述一下 Revealing Module Pattern 设计模式。\"}\n        answer={\"\"}\n      />\n    </div>\n  );\n};\n\nconst QuestionItem = ({ title, answer, onClick }) => {\n  return (\n    <div\n      style={{\n        alignItems: \"flex-start\",\n        alignSelf: \"center\",\n        marginLeft: 300,\n        marginRight: 300,\n      }}\n    >\n      <div\n        style={{\n          marginTop: 28,\n          fontSize: 20,\n          fontWeight: \"500\",\n          color: \"#333\",\n          whiteSpace: \"pre-wrap\",\n        }}\n      >\n        {title}\n      </div>\n      <div style={{ marginTop: 10, whiteSpace: \"pre-wrap\", color: \"#666\" }}>\n        答：{answer}\n      </div>\n      {onClick && (\n        <div\n          onClick={onClick}\n          style={{\n            fontSize: 16,\n            marginTop: 5,\n            color: \"blue\",\n            opacity: 0.8,\n          }}\n        >\n          点击测试\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","/**\n * 路由配置\n * */\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./home\";\nimport UseContext from \"./useContext\";\nimport UseReducer from \"./useReducer\";\nimport UseMemo from \"./useMemo\";\nimport InterviewQuestions from \"./interviewQuestions\";\nimport Javascript from \"./interviewQuestions/javascript/index\";\n\nconst Root = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/UseContext\" component={UseContext} />\n    <Route path=\"/UseReducer\" component={UseReducer} />\n    <Route path=\"/UseMemo\" component={UseMemo} />\n    <Route path=\"/InterviewQuestions\" component={InterviewQuestions} />\n    <Route path=\"/InterviewQuestions\" component={InterviewQuestions} />\n    <Route path=\"/Javascript\" component={Javascript} />\n    <Route render={() => <Redirect to=\"/\" />} />\n  </Switch>\n);\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Root from \"./route\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Root />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}