{"version":3,"sources":["home/index.tsx","useContext/index.tsx","useReducer/index.tsx","useMemo/index.tsx","route.tsx","index.tsx"],"names":["Home","to","style","textAlign","marginTop","CountContext","createContext","Counter","count","useContext","Example","useState","setCount","onClick","Provider","value","initState","num","numReducer","state","action","type","useReducer","dispatch","Child1","React","memo","props","console","log","Child2","n","setN","m","setM","addN","useCallback","addM","Root","exact","path","component","UseContext","UseReducer","UseMemo","render","ReactDOM","document","getElementById"],"mappings":"yMAmBeA,EAhBF,WACX,OACE,gCACE,cAAC,IAAD,CAAMC,GAAG,aAAT,SACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,UAAW,IAA9C,sCAEF,cAAC,IAAD,CAAMH,GAAG,aAAT,SACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,UAAW,IAA9C,sCAEF,cAAC,IAAD,CAAMH,GAAG,UAAT,SACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,UAAW,IAA9C,uC,OCZFC,EAAeC,wBAAc,GAe7BC,EAAU,WACd,IAAMC,EAAQC,qBAAWJ,GACzB,OAAO,mGAAeG,MAGTE,EAlBC,WAAO,IAAD,EACMC,mBAAiB,GADvB,mBACbH,EADa,KACNI,EADM,KAEpB,OACE,sBAAKV,MAAO,CAAEC,UAAW,SAAUC,UAAW,IAA9C,UACE,iFAAYI,KACZ,wBAAQK,QAAS,kBAAMD,EAASJ,EAAQ,IAAxC,SAA6C,mBAC7C,cAACH,EAAaS,SAAd,CAAuBC,MAAOP,EAA9B,SACE,cAAC,EAAD,U,QCRFQ,EAAY,CAChBC,IAAK,GAWDC,EAAa,SAACC,EAAsBC,GACxC,OAAQA,EAAOC,MACb,IAAK,MACH,OAAO,2BAAKF,GAAZ,IAAmBF,IAAKE,EAAMF,IAAM,IACtC,IAAK,SACH,OAAO,2BAAKE,GAAZ,IAAmBF,IAAKE,EAAMF,IAAM,IACtC,QACE,OAAOE,IAeET,EAXC,WAAO,IAAD,EACMY,qBAAWJ,EAAYF,GAD7B,mBACbG,EADa,KACNI,EADM,KAEpB,OACE,sBAAKrB,MAAO,CAAEC,UAAW,SAAUC,UAAW,IAA9C,UACE,sDAAUe,EAAMF,OAChB,wBAAQJ,QAAS,kBAAMU,EAAS,CAAEF,KAAM,YAAxC,0BACA,wBAAQR,QAAS,kBAAMU,EAAS,CAAEF,KAAM,SAAxC,8BCDAG,EAASC,IAAMC,MAAK,SAACC,GAEzB,OADAC,QAAQC,IAAI,yCACL,yEAAcF,EAAMZ,YAGvBe,EAASL,IAAMC,MAAK,SAACC,GAEzB,OADAC,QAAQC,IAAI,yCACL,yEAAcF,EAAMZ,YAGdL,EAtCC,WAAO,IAAD,EACFC,mBAAiB,GADf,mBACboB,EADa,KACVC,EADU,OAEFrB,mBAAiB,IAFf,mBAEbsB,EAFa,KAEVC,EAFU,KAGpBN,QAAQC,IAAI,oDAEZ,IAAMM,EAAOC,uBAAY,WACvBJ,EAAKD,EAAI,KACR,CAACA,IAEEM,EAAOD,uBAAY,WACvBF,EAAKD,EAAI,KACR,CAACA,IACJ,OACE,sBAAK/B,MAAO,CAAEC,UAAW,SAAUC,UAAW,IAA9C,2CAEE,cAACoB,EAAD,CAAQT,MAAOgB,EAAGlB,QAASsB,IAC3B,cAACL,EAAD,CAAQf,MAAOkB,EAAGpB,QAASwB,IAC3B,wBAAQxB,QAASsB,EAAjB,iBACA,wBAAQtB,QAASwB,EAAjB,qBCASC,EAVF,kBACX,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzC,IACjC,cAAC,IAAD,CAAOwC,KAAK,cAAcC,UAAWC,IACrC,cAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWE,IACrC,cAAC,IAAD,CAAOH,KAAK,WAAWC,UAAWG,IAClC,cAAC,IAAD,CAAOC,OAAQ,kBAAM,cAAC,IAAD,CAAU5C,GAAG,aCVtC6C,IAASD,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFE,SAASC,eAAe,W","file":"static/js/main.5d20516e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Link to=\"UseContext\">\n        <div style={{ textAlign: \"center\", marginTop: 50 }}>useContext示例</div>\n      </Link>\n      <Link to=\"UseReducer\">\n        <div style={{ textAlign: \"center\", marginTop: 28 }}>useReducer示例</div>\n      </Link>\n      <Link to=\"UseMemo\">\n        <div style={{ textAlign: \"center\", marginTop: 28 }}>useMemo示例</div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, createContext, useContext } from \"react\";\nconst CountContext = createContext(0);\n\nconst Example = () => {\n  const [count, setCount] = useState<number>(0);\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 50 }}>\n      <p>父组件点击数量：{count}</p>\n      <button onClick={() => setCount(count + 1)}>{\"点击+1\"}</button>\n      <CountContext.Provider value={count}>\n        <Counter />\n      </CountContext.Provider>\n    </div>\n  );\n};\n\nconst Counter = () => {\n  const count = useContext(CountContext);\n  return <p>子组件获得的点击数量：{count}</p>;\n};\n\nexport default Example;\n","import { useReducer } from \"react\";\n\nconst initState = {\n  num: 0,\n};\n\ninterface initStateType {\n  num: number;\n}\n\ninterface actionType {\n  type: string;\n}\n\nconst numReducer = (state: initStateType, action: actionType) => {\n  switch (action.type) {\n    case \"add\":\n      return { ...state, num: state.num + 1 };\n    case \"reduce\":\n      return { ...state, num: state.num - 1 };\n    default:\n      return state;\n  }\n};\n\nconst Example = () => {\n  const [state, dispatch] = useReducer(numReducer, initState);\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 50 }}>\n      <div>数量： {state.num}</div>\n      <button onClick={() => dispatch({ type: \"reduce\" })}>减少</button>\n      <button onClick={() => dispatch({ type: \"add\" })}>增加</button>\n    </div>\n  );\n};\n\nexport default Example;\n","import React, { ReactElement, useCallback, useState } from \"react\";\n\nconst Example = () => {\n  const [n, setN] = useState<number>(0);\n  const [m, setM] = useState<number>(10);\n  console.log(\"执行最外层盒子了\");\n\n  const addN = useCallback(() => {\n    setN(n + 1);\n  }, [n]);\n\n  const addM = useCallback(() => {\n    setM(m + 1);\n  }, [m]);\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 50 }}>\n      最外层盒子\n      <Child1 value={n} onClick={addN} />\n      <Child2 value={m} onClick={addM} />\n      <button onClick={addN}>n+1</button>\n      <button onClick={addM}>m+1</button>\n    </div>\n  );\n};\n\ninterface childProp {\n  value: number;\n  onClick?: () => void;\n}\n\nconst Child1 = React.memo((props: childProp): ReactElement<childProp> => {\n  console.log(\"执行子组件1了\");\n  return <div>子组件1上的n：{props.value}</div>;\n});\n\nconst Child2 = React.memo((props: childProp): ReactElement<childProp> => {\n  console.log(\"执行子组件2了\");\n  return <div>子组件2上的m：{props.value}</div>;\n});\n\nexport default Example;\n","/**\n * 路由配置\n * */\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./home\";\nimport UseContext from \"./useContext\";\nimport UseReducer from \"./useReducer\";\nimport UseMemo from \"./useMemo\";\n\nconst Root = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/UseContext\" component={UseContext} />\n    <Route path=\"/UseReducer\" component={UseReducer} />\n    <Route path=\"/UseMemo\" component={UseMemo} />\n    <Route render={() => <Redirect to=\"/\" />} />\n  </Switch>\n);\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Root from \"./route\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Root />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}